% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_filters.R
\name{sits_envelope}
\alias{sits_envelope}
\title{Envelope filter}
\usage{
sits_envelope(data.tb, operations = "UULL", bands_suffix = "env")
}
\arguments{
\item{data.tb}{a valid sits tibble}

\item{operations}{character sequence indicating which operations must be taken. "U" for upper filter, "D" for down filter.}

\item{bands_suffix}{the suffix to be appended to the resulting data (default "env")}
}
\value{
result.tb   a sits tibble with same samples and the new bands
}
\description{
This function computes the envelope of a time series using the
streaming algorithm proposed by Lemire (2009). This functions calls `dtwclust::compute_envelop` function.
}
\examples{
# Read a set of samples of forest/non-forest in Amazonia
# This is an area full of clouds
prodes.tb <- readRDS (system.file("extdata/time_series/prodes_226_064.rds", package = "sits"))
# Take the first point
prodes1.tb <- prodes.tb[1,]
# Select the NDVI band
prodes1.tb <- sits_select (prodes1.tb, bands = c("ndvi"))
# Apply the envelope filter
prodes_env.tb <- sits_envelope(prodes1.tb)
# Merge the filtered with the raw data
prodes2.tb <- sits_merge (prodes1.tb, prodes_env.tb)
# Plot the result
sits_plot (prodes2.tb)

}
\author{
Rolf Simoes, \email{rolf.simoes@inpe.br}
}
