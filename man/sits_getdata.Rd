% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_getdata.R
\name{sits_getdata}
\alias{sits_getdata}
\title{Obtain time series from different sources}
\usage{
sits_getdata(file = NULL, service = "WTSS", product = "MOD13Q1",
  coverage = "mod13q1_512", longitude = NULL, latitude = NULL,
  start_date = NULL, end_date = NULL, bands = NULL, prefilter = "1",
  label = "NoClass", n_max = Inf)
}
\arguments{
\item{file}{(optional) the name of a file with information on the data to be retrieved (options - CSV, SHP)}

\item{service}{string - name of the time series service (options are "WTSS" or "SATVEG")}

\item{product}{the product from where the information is retrieved}

\item{coverage}{string - the name of the coverage to be retrieved}

\item{longitude}{double - the longitude of the chosen location}

\item{latitude}{double - the latitude of the chosen location)}

\item{start_date}{(optional) date - the start of the period}

\item{end_date}{(optional) date - the end of the period}

\item{bands}{(optional) vector - the names of the bands to be retrieved}

\item{prefilter}{string ("0" - none, "1" - no data correction, "2" - cloud correction, "3" - no data and cloud correction)}

\item{label}{(optional) string - the label to be assigned to the time series}

\item{n_max}{(optional) integer - the maximum number of samples to be read}
}
\value{
data.tb        a SITS tibble
}
\description{
Retrieve a set of time series. There are two main ways of retrieving time series:
using a time series service and from a Raster Brick. Two time series services are available:
(a) the Web Time Series Service (WTSS) by INPE; (b) the SATVEG service from EMBRAPA.
Please see \code{link[sits]{sits_infoWTSS}} for more information on thw WTSS service.
Please see \code{link[sits]{sits_fromSATVEG}} for more information on SATVEG.
The URL and other parameters for access to the time series services are defined in the package
configuration file. This file is called "config.yml". Please see the \code{link[sits]{sits_config}} for
more information.
The following options are available:
\enumerate{
\item No input file is given - it retrieves the data and metadata based on the latitude/longitude location
and on the information provided by the WTSS server.
\item The source is a CSV file - retrieves the metadata from the CSV file and the time series
from the WTSS service.
\item The source is a SHP file - retrives all points inside the shapefile from the WTSS service.
\item The source is a RasterBrick - retrieves the point based on lat/long from the RasterBrick.
\item The source is a ZOO time series - retrieves the time series from the ZOO file, and
the user should supply the metadata.
}
<longitude, latitude, start_date, end_date, label, coverage, time_series>
}
\examples{
\donttest{
# Read a single lat long point from a WTSS server
point.tb <- sits_getdata (longitude = -55.50563, latitude = -11.71557,
         service = "WTSS", product = "MOD13Q1", coverage    = "mod13q1_512")

# show the point
show(point.tb)
# Read a set of points defined in a CSV file from a WTSS server
csv_file <- system.file ("extdata/samples/samples_import.csv", package = "sits")
points.tb <- sits_getdata (file = csv_file, service = "WTSS", product = "MOD13Q1",
             coverage = "mod13q1_512")

# show the points retrieved for the WTSS server
show (points.tb)

# Read a point in a Raster Brick
# define the file that has the raster brick
files  <- c(system.file ("extdata/raster/mod13q1/sinop-crop-ndvi.tif", package = "sits"))
# define the timeline
data(timeline_mod13q1)
timeline <- lubridate::as_date(timeline_mod13q1$V1)
# create a raster metadata file based on the information about the files
raster.tb <- sits_coverageRaster(files, name = "Sinop-crop", timeline, bands = c("ndvi"))
# read the point from the raster
point.tb <- sits_getdata(longitude = -55.50563, latitude = -11.71557,
            service = "RASTER", name = "Sinop-Crop")
}
}
\references{
Lubia Vinhas, Gilberto Queiroz, Karine Ferreira, Gilberto Camara,
Web Services for Big Earth Observation Data.
In: XVII Brazilian Symposium on Geoinformatics, 2016, Campos do Jordao.
Proceedings of GeoInfo 2016. Sao Jose dos Campos: INPE/SBC, 2016. v.1. p.166-177.
}
\author{
Gilberto Camara
}
