% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_machine_learning.R
\name{sits_deeplearning}
\alias{sits_deeplearning}
\title{Train a SITS classifiction model using the keras deep learning}
\usage{
sits_deeplearning(distances.tb = NULL, units = c(400, 200, 100),
  activation = "relu", dropout_rates = c(0.4, 0.3, 0.2),
  optimizer = keras::optimizer_adam(lr = 0.001), epochs = 50,
  batch_size = 128, validation_split = 0.2)
}
\arguments{
\item{distances.tb}{a data.table object with a set of distance measures for each training sample}

\item{units}{a vector containing the number of hidden nodes in each hidden layer}

\item{activation}{a vector containing the names of activation functions. Valid values are {'relu', 'elu', 'selu', 'sigmoid'}}

\item{dropout_rates}{a vector number in containing the dropout rates (0,1) from each layer to the next layer}

\item{optimizer}{Function with a pointer to the optimizer function (default is optimization_adam()).
Options are optimizer_adadelta(), optimizer_adagrad(), optimizer_adam(),
optimizer_adamax(), optimizer_nadam(), optimizer_rmsprop(), optimizer_sgd()}

\item{epochs}{Number of iterations to train the model.}

\item{batch_size}{Number of samples per gradient update.}

\item{validation_split}{Float between 0 and 1. Fraction of the training data to be used as validation data.
The model will set apart this fraction of the training data, will not train on it,
and will evaluate the loss and any model metrics on this data at the end of each epoch.
The validation data is selected from the last samples in the x and y data provided,
before shuffling.}
}
\value{
result          either an model function to be passed in sits_predict or an function prepared that can be called further to compute multinom training model
}
\description{
Use a deeplearning algorithm to classify data.
This function is a front-end to the "keras" method R package.
Please refer to the documentation in that package for more details.
}
\examples{
\donttest{
# Retrieve the set of samples for the Mato Grosso region (provided by EMBRAPA)
data(samples_MT_ndvi)
# get a point with a 16 year time series
data(point_ndvi)
# classify the point
class.tb <- sits_classify (point_ndvi, samples_MT_ndvi, sits_deeplearning(),
                           adj_fun = function (x) {BBmisc::normalize(x, method = "range")})
}
}
\author{
Alexandre Xavier Ywata de Carvalho, \email{alexandre.ywata@ipea.gov.br}

Rolf Simoes, \email{rolf.simoes@inpe.br}

Gilberto Camara, \email{gilberto.camara@inpe.br}
}
