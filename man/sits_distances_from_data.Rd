% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_distances.R
\name{sits_distances_from_data}
\alias{sits_distances_from_data}
\title{Use time series values from a sits tibble as distances for training patterns}
\usage{
sits_distances_from_data(data.tb = NULL, patterns.tb = NULL,
  interval = "12 month")
}
\arguments{
\item{data.tb}{a SITS tibble with original data}

\item{patterns.tb}{Set of patterns obtained from training samples}

\item{interval}{Period to match the data to the patterns}
}
\value{
distances.tb  a tibble where columns have the reference label and the time series values as distances
}
\description{
This function allows using a set of labelled time series as
input to the machine learning models. Instead of first estimating a set
of idealised patterns and then computing distances from these patterns,
the attributes used to train the model are the series themselves.
This function then extracts the time series from a SITS tibble and
"spreads" them in time to produce a tibble with distances.
}
\details{
#' @title Use time series values from a sits tibble as distances for training patterns
#' @name sits_distances_from_data
#' @author Rolf Simoes, \email{rolf.simoes@inpe.br}
#'
#' @description This function allows using a set of labelled time series as
#' input to the machine learning models. Instead of first estimating a set
#' of idealised patterns and then computing distances from these patterns,
#' the attributes used to train the model are the series themselves.
#' This function then extracts the time series from a SITS tibble and
#' "spreads" them in time to produce a tibble with distances.
#'
#' @param  data.tb       a SITS tibble with original data
#' @param  patterns.tb   Set of patterns obtained from training samples
#' @param  interval       Period to match the data to the patterns
#' @return distances.tb  a tibble where columns have the reference label and the time series values as distances
#' @export
sits_distances_from_data <- function(data.tb = NULL, patterns.tb = NULL, interval = "12 month"){

result_fun <- function(data.tb, patterns.tb){
        # apply a correction factor to the time series to avoid negative values
        data.tb <- sits_apply(data.tb, fun = function (band) band + 3.0)

data.tb <- .sits_break_ts (data.tb, patterns.tb, interval)

# extract the band values of the time series
        data.tb$time_series <- data.tb$time_series %>%
            purrr::map(function(ts) {
                ts %>%
                    dplyr::select(-Index) %>%
                    purrr::map(function(band) band) %>%
                    unlist() %>%
                    as.matrix() %>%
                    t() %>%
                    tibble::as_tibble()
        })
        # spread these values as distance attributes
        distances.tb <- data.tb %>%
            dplyr::transmute(original_row = 1:NROW(.), reference = label, time_series) %>%
            tidyr::unnest(time_series)

return(distances.tb)
    }

result <- .sits_factory_function2 (data.tb, patterns.tb, result_fun)
    return (result)
}
}
\author{
Rolf Simoes, \email{rolf.simoes@inpe.br}

Gilberto Camara, \email{gilberto.camara@inpe.br}
}
