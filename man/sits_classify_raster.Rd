% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_classification.R
\name{sits_classify_raster}
\alias{sits_classify_raster}
\title{Classify a set of spatio-temporal raster bricks using machine learning models}
\usage{
sits_classify_raster(file = NULL, raster.tb, samples.tb,
  ml_method = sits_svm(), dist_method = sits_distances_from_data(),
  interval = "12 month", blocksize = 250000, multicores = 2)
}
\arguments{
\item{file}{a set of file names to store the output (one file per classified year)}

\item{raster.tb}{a tibble with information about a set of space-time raster bricks}

\item{samples.tb}{The samples used for training the classification model}

\item{ml_method}{a model trained by \code{\link[sits]{sits_train}}}

\item{dist_method}{The method to obtain the values to be used from training and classification}

\item{interval}{The interval between two sucessive classification}

\item{blocksize}{Default size of the block (rows * cols) (see function .sits_raster_block_size)}

\item{multicores}{Number of threads to process the time series.}

\item{...}{other parameters to be passed to the distance function}
}
\value{
raster_class.tb a SITS tibble with the metadata for the set of RasterLayers
}
\description{
Takes a set of spatio-temporal raster bricks, whose metadata is
             described by tibble (created by \code{\link[sits]{sits_fromRaster}}),
             a set of samples used for training a classification model,
             a prediction model (created by \code{\link[sits]{sits_train}}),
             and produces a classified set of RasterLayers. This function is similar to
              \code{\link[sits]{sits_classify}} which is applied to time series stored in a SITS tibble.
}
\examples{
\donttest{
# Retrieve the set of samples for the Mato Grosso region (provided by EMBRAPA)
data(samples_MT_ndvi)

# read a raster file and put it into a vector
files  <- c(system.file ("extdata/mod13q1/sinop_ndvi_sample.tif", package = "sits"))

# define the timeline
data(timeline_mod13q1)
timeline <- lubridate::as_date (timeline_mod13q1$V1)

# create a raster metadata file based on the information about the files
raster.tb <- sits_STRaster (files, timeline, bands = c("ndvi"), scale_factors = c(0.0001))

# classify the raster file
raster_class.tb <- sits_classify_raster (file = "./raster-class", raster.tb, samples_MT_ndvi,
   ml_method = sits_svm(), blocksize = 300000, multicores = 2)

# Process a larger-scale raster image brick
# these are the symbolic links for the files at dropbox
ndvi <- paste0("https://www.dropbox.com/s/epqfo5vdu1cox6i/Sinop_ndvi.tif?raw=1")
evi <- paste0("https://www.dropbox.com/s/xb9embetftxyr6w/Sinop_evi.tif?raw=1")

# read the files to a local directory
download.file(ndvi, dest="./Sinop_ndvi.tif")
download.file(evi, dest ="./Sinop_evi.tif")

# select the files for processing
files <- c("./Sinop_ndvi.tif", "./Sinop_evi.tif")


# define the bands
bands <- c("ndvi", "evi")
# define the scale factors
scale_factors <-  c(0.0001, 0.0001)

# create a raster metadata file based on the information about the files
raster.tb <- sits_STRaster (files, timeline, bands, scale_factors)

# Retrieve the samples from EMBRAPA (used as training sets for classification)
data(samples_MT_9classes)

#select the bands for classification
samples.tb <- sits_select(samples_MT_9classes, bands = c("ndvi", "evi"))

# classify the raster image
sits_classify_raster (file = "./sinop-class", raster.tb, samples.tb,
     ml_method = sits_svm (cost = 1000, kernel = "radial", tolerance = 0.001, epsilon = 0.1),
     blocksize = 300000, multicores = 2)

}

}
\author{
Gilberto Camara, \email{gilberto.camara@inpe.br}
}
