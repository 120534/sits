// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// preprocess_data
NumericMatrix preprocess_data(NumericMatrix data, const int& minimum_value, const double& scale_factor);
RcppExport SEXP _sits_preprocess_data(SEXP dataSEXP, SEXP minimum_valueSEXP, SEXP scale_factorSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int& >::type minimum_value(minimum_valueSEXP);
    Rcpp::traits::input_parameter< const double& >::type scale_factor(scale_factorSEXP);
    rcpp_result_gen = Rcpp::wrap(preprocess_data(data, minimum_value, scale_factor));
    return rcpp_result_gen;
END_RCPP
}
// scale_data
NumericMatrix scale_data(NumericMatrix data, const double& scale_factor, const double& adj_val);
RcppExport SEXP _sits_scale_data(SEXP dataSEXP, SEXP scale_factorSEXP, SEXP adj_valSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const double& >::type scale_factor(scale_factorSEXP);
    Rcpp::traits::input_parameter< const double& >::type adj_val(adj_valSEXP);
    rcpp_result_gen = Rcpp::wrap(scale_data(data, scale_factor, adj_val));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sits_preprocess_data", (DL_FUNC) &_sits_preprocess_data, 3},
    {"_sits_scale_data", (DL_FUNC) &_sits_scale_data, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_sits(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
