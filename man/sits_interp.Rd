% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_filters.R
\name{sits_interp}
\alias{sits_interp}
\title{Interpolation function of the time series of a sits_tibble}
\usage{
sits_interp(data.tb, fun = stats::approx, n = base::length, ...)
}
\arguments{
\item{data.tb}{a valid sits tibble}

\item{fun}{the interpolation function to be used}

\item{n}{the number of time series elements to be created between start date and end date.
When a class function is passed to `n`, is is evaluated with each band time series as
an argument, e.g. n(band) (default: `length` function)}

\item{...}{additional parameters to be used by the fun function}
}
\value{
result.tb    a sits tibble with same samples and the new bands
}
\description{
Computes the linearly interpolated bands for a given resolution
              using the R base function approx
}
\examples{
# Retrieve a point
point.tb <- readRDS(system.file("extdata/time_series/point.rds", package = "sits"))
# select one band
point.tb <- sits_select (point.tb, bands = c("ndvi"))
# find out how many time instances are there
n_times <- NROW (point.tb$time_series[[1]])
# interpolate three times more points
point_int.tb <- sits_interp(point.tb, fun = stats::spline, n = 3*n_times)
# plot the result
sits_plot (point_int.tb)

}
\author{
Rolf Simoes, \email{rolf.simoes@inpe.br}
}
