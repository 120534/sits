% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_validate.R
\name{sits_kfold_fast_validate}
\alias{sits_kfold_fast_validate}
\title{Cross-validate temporal patterns (faster than sits_kfold_validate)}
\usage{
sits_kfold_fast_validate(data.tb, folds = 5,
  dist_method = sits_distances_from_data(), tr_method = sits_svm(),
  multicores = 1)
}
\arguments{
\item{data.tb}{a SITS tibble}

\item{folds}{number of partitions to create.}

\item{dist_method}{method to compute distances (e.g., sits_TWDTW_distances)}

\item{tr_method}{machine learning training method}

\item{multicores}{number of threads to process the validation (Linux or MacOSX only). Each process will run a whole partition validation.}
}
\value{
pred_ref.tb    a tibble containing pairs of reference and predicted values
}
\description{
Splits the set of time series into training and validation and
perform k-fold cross-validation. This function is similar to sits_kfold_validate (see above)
but it is not as accurate. The patterns and the distance matrices are calculated
once for all samples. The distance matrix is then used for kfold validation.
In general, if the number of samples per class is not small,
the results will be faster than the full validate.
This function should be used for a first comparison between different machine learning methods.
For reporting in papers, please use the sits_kfold_validate method.

This function returns the confusion matrix.
}
\author{
Rolf Simoes, \email{rolf.simoes@inpe.br}

Gilberto Camara, \email{gilberto.camara@inpe.br}
}
